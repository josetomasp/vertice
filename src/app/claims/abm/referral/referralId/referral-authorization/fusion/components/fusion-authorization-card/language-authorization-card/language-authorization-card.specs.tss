import { render } from '@testing-library/angular';
import { LanguageAuthorizationCardComponent } from './language-authorization-card.component';
import { provideMockStore } from '@ngrx/store/testing';
import { MatDialogModule } from '@angular/material/dialog';
import { DatePipe } from '@angular/common';
import { MatCardModule } from '@angular/material/card';
import { FontAwesomeTestingModule } from '@fortawesome/angular-fontawesome/testing';
import { SharedModule } from '@shared';
import { provideMockActions } from '@ngrx/effects/testing';
import { Observable } from 'rxjs';
import { Action, StoreModule } from '@ngrx/store';
import { EffectsModule } from '@ngrx/effects';
import { HttpClientTestingModule } from '@angular/common/http/testing';
import { RouterTestingModule } from '@angular/router/testing';
import { MatSnackBarModule } from '@angular/material/snack-bar';
import { ActionFormComponent } from '../../action-form/action-form.component';
import { FusionNarrativeTextComponent } from '../../fusion-narrative-text/fusion-narrative-text.component';
import { FusionAuthorizationService } from '../../../fusion-authorization.service';
import { MatRadioModule } from '@angular/material/radio';
import { FormArray, FormsModule, ReactiveFormsModule } from '@angular/forms';
import { CustomerConfigsModule } from '../../../../../../../../../customer-configs/customer-configs.module';
import { NarrativeTextComponent } from '../../../../transportation/transportation-authorization-open/components/narrative-text/narrative-text.component';
import { NO_ERRORS_SCHEMA } from '@angular/core';
import {
  FormValidationExtractorModule,
  FormValidationExtractorService
} from '@modules/form-validation-extractor';

describe('LanguageAuthorizationCardComponent', () => {
  let actions$ = new Observable<Action>();

  function setup() {
    return render(LanguageAuthorizationCardComponent, {
      componentProperties: {
        formArray: new FormArray([])
      },
      imports: [
        FormValidationExtractorModule,
        ReactiveFormsModule,
        FormsModule,
        HttpClientTestingModule,
        RouterTestingModule,
        MatDialogModule,
        MatCardModule,
        MatSnackBarModule,
        MatRadioModule,
        FontAwesomeTestingModule,
        SharedModule,
        EffectsModule.forRoot(),
        StoreModule.forRoot({}),
        CustomerConfigsModule
      ],
      declarations: [
        ActionFormComponent,
        FusionNarrativeTextComponent,
        NarrativeTextComponent
      ],
      providers: [
        DatePipe,
        FusionAuthorizationService,
        FormValidationExtractorService
      ],
      /**
       * TODO: Remove this as it's a giant band-aid
       */
      schemas: [NO_ERRORS_SCHEMA]
    });
  }
  test('init', async () => {
    await setup();
  });
});
